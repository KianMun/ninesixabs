[{"C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\index.js":"1","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\App.js":"2","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\reportWebVitals.js":"3","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\plates.js":"4","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\Plate.js":"5","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\load_csv.js":"6","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\parse_csv.js":"7"},{"size":603,"mtime":1610175480959,"results":"8","hashOfConfig":"9"},{"size":528,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1393,"mtime":1610193805325,"results":"12","hashOfConfig":"9"},{"size":4275,"mtime":1610022723901,"results":"13","hashOfConfig":"9"},{"size":2749,"mtime":1609767337917,"results":"14","hashOfConfig":"9"},{"size":6571,"mtime":1610283427602,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"lnvw5b",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\index.js",["35","36"],"//Default React imports\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n//Dependencies imports\n\n\n//External file imports\nimport './css/index.css';\nimport {plates} from './plates.js'\nimport Plate from './Plate'\nimport FileUpload from './load_csv'\nimport LoadCSV from './parse_csv'\n\n\n\n\nfunction PlateList() {\n  return (\n      <section className='platelist'>\n      {plates.map((plate)=> {\n        return <Plate key={plate.id}{...plate}></Plate>;\n      })}\n    </section>\n  );\n}\n\n\n\nReactDOM.render(\n<div>\n  <LoadCSV />\n  <PlateList />\n</div>, \ndocument.getElementById('root'));\n\n",["37","38"],"C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\App.js",[],["39","40"],"C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\reportWebVitals.js",[],"C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\plates.js",["41"],"import plateNames from \"./parse_csv\"\r\n\r\n//Array for plate and its wells object\r\nexport const plates = [\r\n    {\r\n      id: 1,\r\n      plateName:'Plate 01',\r\n      A01:'A01', A02:'A02', A03:'A03', A04:'A04', A05:'A05', A06:'A06', A07:'A07', A08:'A08', A09:'A09', A10:'A10', A11:'A11', A12:'A12',\r\n      B01:'B01',B02:'B02', B03:'B03', B04:'B04', B05:'B05', B06:'B06', B07:'B07', B08:'B08', B09:'B09', B10:'B10', B11:'B11', B12:'B12',\r\n      C01:'C01', C02:'C02', C03:'C03', C04:'C04', C05:'C05', C06:'C06', C07:'C07', C08:'C08', C09:'C09', C10:'C10', C11:'C11', C12:'C12',\r\n      D01:'D01', D02:'D02', D03:'D03', D04:'D04', D05:'D05', D06:'D06', D07:'D07', D08:'D08', D09:'D09', D10:'D10', D11:'D11', D12:'D12',\r\n      E01:'E01', E02:'E02', E03:'E03', E04:'E04', E05:'E05', E06:'E06', E07:'E07', E08:'E08', E09:'E09', E10:'E10', E11:'E11', E12:'E12',\r\n      F01:'F01', F02:'F02', F03:'F03', F04:'F04', F05:'F05', F06:'F06', F07:'F07', F08:'F08', F09:'F09', F10:'F10', F11:'F11', F12:'F12',\r\n      G01:'G01', G02:'G02', G03:'G03', G04:'G04', G05:'G05', G06:'G06', G07:'G07', G08:'G08', G09:'G09', G10:'G10', G11:'G11', G12:'G12',\r\n      H01:'H01', H02:'H02', H03:'H03', H04:'H04', H05:'H05', H06:'H06', H07:'H07', H08:'H08', H09:'H09', H10:'H10', H11:'H11', H12:'H12',\r\n  \r\n    },\r\n  ]\r\n\r\n// const mulitplates = {}\r\n\r\n// for(var i =0; i<plateNames.length; i++){\r\n//   multiplates += plates; \r\n// }","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\Plate.js",[],"C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\load_csv.js",["42","43","44","45"],"//Default React imports\r\nimport React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//Dependencies imports\r\nimport DataTable from 'react-data-table-component';\r\nimport * as XLSX from 'xlsx';\r\n\r\n//External files import\r\nimport './css/index.css';\r\n\r\nfunction FileUpload(){\r\n    const [columns, setColumns] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    \r\n    //process csv to JSON format\r\n    const processData = dataString => {\r\n      const dataStringLines = dataString.split(/\\r\\n|\\n/);\r\n      const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\r\n   \r\n      const list = [];\r\n      for (let i = 1; i < dataStringLines.length; i++) {\r\n        const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\r\n        if (headers && row.length == headers.length) {\r\n          const obj = {};\r\n          for (let j = 0; j < headers.length; j++) {\r\n            let d = row[j];\r\n            if (d.length > 0) {\r\n              if (d[0] == '\"')\r\n                d = d.substring(1, d.length - 1);\r\n              if (d[d.length - 1] == '\"')\r\n                d = d.substring(d.length - 2, 1);\r\n            }\r\n            if (headers[j]) {\r\n              obj[headers[j]] = d;\r\n            }\r\n          }\r\n   \r\n          // remove the blank rows\r\n          if (Object.values(obj).filter(x => x).length > 0) {\r\n            list.push(obj);\r\n          }\r\n        }\r\n      }\r\n   \r\n      // prepare columns list from headers\r\n      const columns = headers.map(c => ({\r\n        name: c,\r\n        selector: c,\r\n      }));\r\n   \r\n      setData(list);\r\n      setColumns(columns);\r\n    }\r\n  \r\n  \r\n    const handleFileUpload = e => {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = (evt) => {\r\n        /* Parse data */\r\n        const bstr = evt.target.result;\r\n        const wb = XLSX.read(bstr, { type: 'binary' });\r\n        /* Get first worksheet */\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        /* Convert array of arrays */\r\n        const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n        processData(data);\r\n      };\r\n      if(file){\r\n        reader.readAsBinaryString(file)}\r\n        else{\r\n          //alert('Please select a file')\r\n        }\r\n  \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"title\">96 Well Cherry Picker</h2>\r\n        <input\r\n        type=\"file\"\r\n        accept=\".csv, .xlsx,.xls\"\r\n        onChange={handleFileUpload}\r\n        />\r\n        <DataTable\r\n        pagination\r\n        highlightOnHover\r\n        columns={columns}\r\n        data={data}\r\n        />\r\n        \r\n        \r\n      </div>\r\n   \r\n   \r\n    )\r\n}\r\n\r\n  export default FileUpload","C:\\Users\\kianm\\react_tutorials\\ninesixsbs\\ninesixabs\\src\\parse_csv.js",["46","47","48","49","50","51","52","53","54"],{"ruleId":"55","severity":1,"message":"56","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":12,"column":8,"nodeType":"57","messageId":"58","endLine":12,"endColumn":18},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},{"ruleId":"55","severity":1,"message":"66","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":18},{"ruleId":"55","severity":1,"message":"67","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":24,"column":35,"nodeType":"70","messageId":"71","endLine":24,"endColumn":37},{"ruleId":"68","severity":1,"message":"69","line":29,"column":24,"nodeType":"70","messageId":"71","endLine":29,"endColumn":26},{"ruleId":"68","severity":1,"message":"69","line":31,"column":35,"nodeType":"70","messageId":"71","endLine":31,"endColumn":37},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"72","line":8,"column":5,"nodeType":"57","messageId":"58","endLine":8,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":63,"column":21,"nodeType":"70","messageId":"75","endLine":63,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":64,"column":20,"nodeType":"70","messageId":"75","endLine":64,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":66,"column":94,"nodeType":"70","messageId":"75","endLine":66,"endColumn":95},{"ruleId":"55","severity":1,"message":"76","line":83,"column":7,"nodeType":"57","messageId":"58","endLine":83,"endColumn":23},{"ruleId":"55","severity":1,"message":"77","line":102,"column":7,"nodeType":"57","messageId":"58","endLine":102,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":127,"column":9,"nodeType":"57","messageId":"80","endLine":127,"endColumn":16},{"ruleId":"55","severity":1,"message":"77","line":146,"column":7,"nodeType":"57","messageId":"58","endLine":146,"endColumn":12},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FileUpload' is defined but never used.","no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"'plateNames' is defined but never used.","'ReactDOM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'well_positions' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'side_headernames' is assigned a value but never used.","'cells' is assigned a value but never used.","no-redeclare","'columns' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]